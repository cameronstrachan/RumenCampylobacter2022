ungroup() %>%
filter(palign > 70) %>%
filter(pident > 70)
compiled_complete_blast_hits_nucl1 <- select(compiled_complete_blast_hits_nucl, genome1, gene1, genome2, gene2, pident, palign)
colnames(compiled_complete_blast_hits_nucl1)[5] <- "pident1"
colnames(compiled_complete_blast_hits_nucl1)[6] <- "palign1"
compiled_complete_blast_hits_nucl2 <- select(compiled_complete_blast_hits_nucl, genome1, gene1, genome2, gene2, pident, palign)
colnames(compiled_complete_blast_hits_nucl2) <- c("genome2", "gene2", "genome1", "gene1", "pident2", "palign2")
reciprocal_best_hits_nucl <- inner_join(compiled_complete_blast_hits_nucl1, compiled_complete_blast_hits_nucl2) %>%
mutate(pident = (pident1 + pident2)/2) %>%
mutate(palign = (palign1 + palign2)/2) %>%
select(-pident1, -pident2, -palign1, -palign2)
df_plot <- reciprocal_best_hits_nucl %>%
filter(genome1 == "JMF18_spades_pomoxis_polished_min2000") %>%
filter(genome2 == "131980_spades_pomoxis_polished_min2000") %>%
select(gene1, gene2, pident) %>%
mutate(gene1 = as.character(gene1)) %>%
mutate(gene2 = as.character(gene2)) %>%
separate(gene1, into=c("label1", "gene1_num"), sep = "_", remove = FALSE) %>%
separate(gene2, into=c("label2", "gene2_num"), sep = "_", remove = FALSE) %>%
mutate(gene1_num = as.numeric(gene1_num)) %>%
mutate(gene2_num = as.numeric(gene2_num)) %>%
mutate(gene2_num_adjust = if_else(gene2_num <= 1101, gene2_num+462, gene2_num-1101)) %>%
mutate(gene2_num_adjust = abs(gene2_num_adjust - 1564)) %>%
select(label1, gene1_num, label2, gene2_num_adjust, pident) %>%
full_join(gene_categoriesX) %>%
mutate(rm = if_else(is.na(pident) & classX == "core", "yes", "no")) %>%
filter(rm != "yes") %>%
full_join(gene_categoriesY) %>%
mutate(rm = if_else(is.na(pident) & classY == "core", "yes", "no")) %>%
mutate(rm = if_else(!(is.na(classX)), "no", rm)) %>%
filter(rm != "yes")  %>%
select(-rm) %>%
mutate(label1 = if_else(is.na(label1), "KHAFFMAE", label1)) %>%
mutate(gene1_num = if_else(is.na(gene1_num), 0, gene1_num)) %>%
mutate(label2 = if_else(is.na(label2), "HKMHBKFO", label2)) %>%
mutate(gene2_num_adjust = if_else(is.na(gene2_num_adjust), 0, gene2_num_adjust)) %>%
mutate(pident = if_else(is.na(pident), 0, pident)) %>%
mutate(classX = if_else(is.na(classX), "none", classX)) %>%
mutate(classY = if_else(is.na(classY), "none", classY)) %>%
mutate(flexX = if_else(classX == "flex", "0", "NA")) %>%
mutate(flexY  = if_else(classY == "flex", "0", "NA")) %>%
mutate(pop_specificX = if_else(classX == "pop_specific", "0", "NA")) %>%
mutate(pop_specificY = if_else(classY == "pop_specific", "0", "NA"))
df_plot$flexX <- as.numeric(df_plot$flexX)
df_plot$flexY <- as.numeric(df_plot$flexY)
df_plot$pop_specificX <- as.numeric(df_plot$pop_specificX)
df_plot$pop_specificY <- as.numeric(df_plot$pop_specificY)
### PLOT
pdf("~/RumenCampylobacter2022/Figures/Fig2_AB/output/fig2_A.pdf", width=9, height=4.5)
ggplot(df_plot, aes(x=gene1_num, y=gene2_num_adjust)) +
geom_point(aes(colour=pident), shape = 108, size = 2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_colour_gradient(low = "white", high = "black", na.value = NA, limits = c(75,100)) +
geom_point(aes(x=gene1_num, y=flexX), colour = "red", shape = 108, size = 2) +
geom_point(aes(x=gene1_num, y=pop_specificX ), colour = "blue", shape = 108, size = 2) +
geom_point(aes(x=flexY, y=gene2_num_adjust), colour = "red", shape = 108, size = 2) +
geom_point(aes(x=pop_specificY, y=gene2_num_adjust), colour = "blue", shape = 108, size = 2)
dev.off()
###
gene_categories_summary <- df_plot %>%
select(classX, classY) %>%
gather(genome, class) %>%
group_by(genome, class) %>%
mutate(total_class = n()) %>%
ungroup() %>%
distinct() %>%
filter(class != "none") %>%
group_by(genome) %>%
mutate(total_genome = sum(total_class)) %>%
ungroup() %>%
mutate(per = (total_class / total_genome)*100)
gene_categories_summary$total_class <- as.numeric(gene_categories_summary$total_class)
scaleFUN <- function(x) sprintf("%.0f", x)
### PLOT
pdf("~/RumenCampylobacter2022/Figures/Fig2_AB/output/fig2_B.pdf", width=6, height=6)
ggplot(gene_categories_summary, aes(x=class, y=total_class, fill=genome)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
dev.off()
###
pop_specific_annotations <- read.csv("~/RumenCampylobacter2022/Processing/genomes/output/compiled_annotations.csv") %>%
filter(locus_tag %in% pop_specific$gene1)
write.csv(pop_specific_annotations, "~/RumenCampylobacter2022/Figures/Fig2_AB/output/pop_specific_annotations_total.csv")
pop_specific_annotations_noHyp <- pop_specific_annotations %>%
filter(!(product == "hypothetical protein" & product2 == "hypothetical protein" & product3 == "hypothetical protein"))
write.csv(pop_specific_annotations_noHyp, "~/RumenCampylobacter2022/Figures/Fig2_AB/output/pop_specific_annotations_no_hypothetical.csv")
pop_specific_annotations$product3 <- gsub("putative protein", "hypothetical protein", pop_specific_annotations$product3)
annotation_count_summary <- pop_specific_annotations %>%
select(file, product3) %>%
group_by(file, product3) %>%
mutate(count = n()) %>%
ungroup() %>%
group_by(file) %>%
mutate(total = n()) %>%
ungroup() %>%
distinct() %>%
mutate(per = (count / total)*100)
write.csv(annotation_count_summary, "~/RumenCampylobacter2022/Figures/Fig2_AB/output/annotation_count_summary.csv")
library(tidyverse)
allele_count <- read_table("~/RumenCampylobacter2022/Processing/metagenomes/output/R1_clones_filtered_onlySNPs.frq.count", col_names = c("contig", "position", "n_alleles", "total_count", "allele_1", "allele_2", "allele_3", "allele_4"), skip = 1)
allele_count_gather <- allele_count %>%
gather(allele, count, -contig, -position, -n_alleles, -total_count) %>%
filter(!is.na(count)) %>%
select(-allele) %>%
separate(count, into = c("base", "count"), sep = ":") %>%
filter(count != "0") %>%
select(-n_alleles, -total_count, -count)
S0_mutations <- allele_count_gather %>%
filter(contig == "NODE_1_length_1570312_cov_317.865870") %>%
arrange(position) %>%
mutate(diff = position - lag(position, default = first(position)))
S1_mutations <- allele_count_gather %>%
filter(contig == "NODE_1_length_1536821_cov_689.307783") %>%
arrange(position) %>%
mutate(diff = position - lag(position, default = first(position)))
window = 1000
start = 428381
end = 628381
len = end - start
region_grouping <- as.data.frame(cbind(seq(start, end - 1, 1), rep(1:(len/window), each=window)))
colnames(region_grouping) <- c("position", "wind")
S0_mutations_region <- S0_mutations %>%
filter(position >= start) %>%
filter(position <= end) %>%
select(position) %>%
inner_join(region_grouping) %>%
group_by(wind) %>%
mutate(n_mutations = n()) %>%
ungroup() %>%
select(-position) %>%
distinct() %>%
full_join(region_grouping) %>%
mutate(n_mutations = replace_na(n_mutations, 0)) %>%
select(-position) %>%
mutate(position = (wind*window) + start) %>%
distinct() %>%
mutate(percent_snps = (n_mutations / window) *100)
library(zoo)
ggplot(S0_mutations_region, aes(x = position, y = percent_snps)) +
geom_point() +
geom_line(aes(y=rollmean(percent_snps, 200))) +
theme_bw()
597184
window = 1000
start = 497184
end = 697184
len = end - start
region_grouping <- as.data.frame(cbind(seq(start, end - 1, 1), rep(1:(len/window), each=window)))
colnames(region_grouping) <- c("position", "wind")
S1_mutations_region <- S1_mutations %>%
filter(position >= start) %>%
filter(position <= end) %>%
select(position) %>%
inner_join(region_grouping) %>%
group_by(wind) %>%
mutate(n_mutations = n()) %>%
ungroup() %>%
select(-position) %>%
distinct() %>%
full_join(region_grouping) %>%
mutate(n_mutations = replace_na(n_mutations, 0)) %>%
select(-position) %>%
mutate(position = (wind*window) + start) %>%
distinct() %>%
mutate(percent_snps = (n_mutations / window) *100)
pdf("~/RumenCampylobacter2022/Figures/Fig3_A/output/fig3_A.pdf", width=12, height=4.5)
ggplot(S1_mutations_region, aes(x = position, y = percent_snps)) +
geom_point() +
#geom_line(aes(y=rollmean(percent_snps, 200))) +
theme_bw()
dev.off()
counts <- read.delim("~/RumenCampylobacter2022/Processing/amplicons/output/asv-counts-merged.txt", header=FALSE)
counts <- counts[-1,]
counts[] <- lapply(counts, as.character)
names(counts) <- counts[1,]
library(tidyverse)
library(rRDP)
counts <- read.delim("~/RumenCampylobacter2022/Processing/amplicons/output/asv-counts-merged.txt", header=FALSE)
counts <- counts[-1,]
counts[] <- lapply(counts, as.character)
names(counts) <- counts[1,]
counts <- counts[-1,]
counts[,2:ncol(counts)] <- lapply(counts[,2:ncol(counts)], as.numeric)
names(counts)[1] <- "asv"
counts_long_norm <- gather(counts, ID, count, -asv) %>%
filter(count != 0) %>%
group_by(ID) %>%
mutate(reads= sum(count)) %>%
ungroup() %>%
mutate(counts_normalized = (count / reads)*100)
seq <- readDNAStringSet("~/RumenCampylobacter2022/Processing/amplicons/output/asv-seqs-merged.fasta")
pred <- predict(rdp(), seq)
conf <- attr(pred, "confidence")
pred$asv <- row.names(pred)
conf <- as.data.frame(conf)
colnames(conf) <- paste(colnames(conf), "conf", sep = "_")
conf$asv <- row.names(conf)
taxa <- inner_join(pred, conf) %>%
select(asv, domain, domain_conf, phylum, phylum_conf, class,
class_conf, order, order_conf, family, family_conf, genus, genus_conf)
taxa_select <- taxa %>%
select(asv, phylum, class, order, family)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_med = median(counts_normalized)) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
filter((max(asv_prev)/asv_prev) > 0.9) %>%
filter(asv_med > 1) %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE)
pdf(file = "plots/top_asv.pdf", width = 7, height = 10)
ggplot(counts_long_norm_taxa_select, aes(x=reorder(asv_class, asv_med), y=counts_normalized)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1))
dev.off()
library(tidyverse)
library(rRDP)
counts <- read.delim("~/RumenCampylobacter2022/Processing/amplicons/output/asv-counts-merged.txt", header=FALSE)
counts <- counts[-1,]
counts[] <- lapply(counts, as.character)
names(counts) <- counts[1,]
counts <- counts[-1,]
counts[,2:ncol(counts)] <- lapply(counts[,2:ncol(counts)], as.numeric)
names(counts)[1] <- "asv"
counts_long_norm <- gather(counts, ID, count, -asv) %>%
filter(count != 0) %>%
group_by(ID) %>%
mutate(reads= sum(count)) %>%
ungroup() %>%
mutate(counts_normalized = (count / reads)*100)
seq <- readDNAStringSet("~/RumenCampylobacter2022/Processing/amplicons/output/asv-seqs-merged.fasta")
pred <- predict(rdp(), seq)
conf <- attr(pred, "confidence")
pred$asv <- row.names(pred)
conf <- as.data.frame(conf)
colnames(conf) <- paste(colnames(conf), "conf", sep = "_")
conf$asv <- row.names(conf)
taxa <- inner_join(pred, conf) %>%
select(asv, domain, domain_conf, phylum, phylum_conf, class,
class_conf, order, order_conf, family, family_conf, genus, genus_conf)
taxa_select <- taxa %>%
select(asv, phylum, class, order, family)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_med = median(counts_normalized)) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
filter((max(asv_prev)/asv_prev) > 0.9) %>%
filter(asv_med > 1) %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE)
pdf(file = "~/RumenCampylobacter2022/Figures/Fig2_AB/output/fig1_A.pdf", width = 7, height = 10)
ggplot(counts_long_norm_taxa_select, aes(x=reorder(asv_class, asv_med), y=counts_normalized)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1))
dev.off()
library(tidyverse)
library(rRDP)
counts <- read.delim("~/RumenCampylobacter2022/Processing/amplicons/output/asv-counts-merged.txt", header=FALSE)
counts <- counts[-1,]
counts[] <- lapply(counts, as.character)
names(counts) <- counts[1,]
counts <- counts[-1,]
counts[,2:ncol(counts)] <- lapply(counts[,2:ncol(counts)], as.numeric)
names(counts)[1] <- "asv"
counts_long_norm <- gather(counts, ID, count, -asv) %>%
filter(count != 0) %>%
group_by(ID) %>%
mutate(reads= sum(count)) %>%
ungroup() %>%
mutate(counts_normalized = (count / reads)*100)
seq <- readDNAStringSet("~/RumenCampylobacter2022/Processing/amplicons/output/asv-seqs-merged.fasta")
pred <- predict(rdp(), seq)
conf <- attr(pred, "confidence")
pred$asv <- row.names(pred)
conf <- as.data.frame(conf)
colnames(conf) <- paste(colnames(conf), "conf", sep = "_")
conf$asv <- row.names(conf)
taxa <- inner_join(pred, conf) %>%
select(asv, domain, domain_conf, phylum, phylum_conf, class,
class_conf, order, order_conf, family, family_conf, genus, genus_conf)
taxa_select <- taxa %>%
select(asv, phylum, class, order, family)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_med = median(counts_normalized)) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
filter((max(asv_prev)/asv_prev) > 0.9) %>%
filter(asv_med > 1) %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE)
pdf(file = "~/RumenCampylobacter2022/Figures/Fig1_AB/output/fig1_A.pdf", width = 7, height = 10)
ggplot(counts_long_norm_taxa_select, aes(x=reorder(asv_class, asv_med), y=counts_normalized)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1))
dev.off()
library(tidyverse)
class <- read.delim("~/RumenCampylobacter2022/Processing/metagenomes/output/gtdbtk.bac120.summary.tsv")[,1:2]
colnames(class)[1] <- "bin_id"
checkm <- read_table2("~/RumenCampylobacter2022/Processing/metagenomes/output/checkM.txt", col_names = FALSE, skip = 3, comment = "---")[,c(1,13:15)]
colnames(checkm) <- c("bin_id", "completeness", "contamination", "strain_heterogeneity")
map <- read.csv("~/RumenCampylobacter2022/Processing/metagenomes/output/bin_contig_map.csv", header=FALSE)
colnames(map) <- c("bin_id", "contig_id")
read_count_files <- list.files('~/RumenCampylobacter2022/Processing/metagenomes/output/mapping/', pattern = "bins_readcounts.txt")
df_list <- list()
i <- 1
for (file in read_count_files){
file_loc <- paste("output/mapping/", file, sep = "")
df <- read.delim(file_loc, header=FALSE)[,1:3]
colnames(df) <- c("contig_id", "contig_len", "count")
df$reads <- gsub("_bins_readcounts.txt", "", file)
df_list[[i]] <- df
i <- i + 1
}
read_count <- bind_rows(df_list)
compiled <- inner_join(class, checkm) %>%
inner_join(map) %>%
inner_join(read_count)
summary <- compiled %>%
filter(count > 3) %>%
separate(reads, into=c("sample", "lane"), sep = "_") %>%
group_by(bin_id, sample) %>%
mutate(bin_len = sum(contig_len)) %>%
mutate(sample_count = sum(count)) %>%
ungroup() %>%
group_by(bin_id) %>%
mutate(total_count = sum(count)) %>%
ungroup() %>%
mutate(sample_med_count_per_kb = (sample_count/bin_len)*1000) %>%
mutate(total_med_count_per_kb = (total_count/bin_len)*1000) %>%
select(-count, -contig_id, -contig_len, -lane) %>%
distinct() %>%
separate(classification, into = c("domain", "phylum", "class", "order", "family", "genus"), sep = ";") %>%
unite(id, c("bin_id", "phylum", "class", "order", "family"), sep = "_", remove = FALSE) %>%
filter(contamination < 10) %>%
filter(completeness > 50)
pdf(file = "~/RumenCampylobacter2022/Figures/Fig1_AB/output/fig1_B.pdf",   # The directory you want to save the file in
width = 7, # The width of the plot in inches
height = 9)
ggplot(summary, aes(x=reorder(id, total_med_count_per_kb), y=sample_med_count_per_kb)) +
geom_boxplot(outlier.shape = NA) +
geom_point(shape=16, size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
library(tidyverse)
class <- read.delim("~/RumenCampylobacter2022/Processing/metagenomes/output/gtdbtk.bac120.summary.tsv")[,1:2]
colnames(class)[1] <- "bin_id"
checkm <- read_table2("~/RumenCampylobacter2022/Processing/metagenomes/output/checkM.txt", col_names = FALSE, skip = 3, comment = "---")[,c(1,13:15)]
checkm <- read_table("~/RumenCampylobacter2022/Processing/metagenomes/output/checkM.txt", col_names = FALSE, skip = 3, comment = "---")[,c(1,13:15)]
colnames(checkm) <- c("bin_id", "completeness", "contamination", "strain_heterogeneity")
map <- read.csv("~/RumenCampylobacter2022/Processing/metagenomes/output/bin_contig_map.csv", header=FALSE)
colnames(map) <- c("bin_id", "contig_id")
read_count_files <- list.files('~/RumenCampylobacter2022/Processing/metagenomes/output/mapping/', pattern = "bins_readcounts.txt")
df_list <- list()
i <- 1
for (file in read_count_files){
file_loc <- paste("output/mapping/", file, sep = "")
df <- read.delim(file_loc, header=FALSE)[,1:3]
colnames(df) <- c("contig_id", "contig_len", "count")
df$reads <- gsub("_bins_readcounts.txt", "", file)
df_list[[i]] <- df
i <- i + 1
}
for (file in read_count_files){
file_loc <- paste("~/RumenCampylobacter2022/Processing/metagenomes/output/mapping/", file, sep = "")
df <- read.delim(file_loc, header=FALSE)[,1:3]
colnames(df) <- c("contig_id", "contig_len", "count")
df$reads <- gsub("_bins_readcounts.txt", "", file)
df_list[[i]] <- df
i <- i + 1
}
read_count <- bind_rows(df_list)
compiled <- inner_join(class, checkm) %>%
inner_join(map) %>%
inner_join(read_count)
summary <- compiled %>%
filter(count > 3) %>%
separate(reads, into=c("sample", "lane"), sep = "_") %>%
group_by(bin_id, sample) %>%
mutate(bin_len = sum(contig_len)) %>%
mutate(sample_count = sum(count)) %>%
ungroup() %>%
group_by(bin_id) %>%
mutate(total_count = sum(count)) %>%
ungroup() %>%
mutate(sample_med_count_per_kb = (sample_count/bin_len)*1000) %>%
mutate(total_med_count_per_kb = (total_count/bin_len)*1000) %>%
select(-count, -contig_id, -contig_len, -lane) %>%
distinct() %>%
separate(classification, into = c("domain", "phylum", "class", "order", "family", "genus"), sep = ";") %>%
unite(id, c("bin_id", "phylum", "class", "order", "family"), sep = "_", remove = FALSE) %>%
filter(contamination < 10) %>%
filter(completeness > 50)
pdf(file = "~/RumenCampylobacter2022/Figures/Fig1_AB/output/fig1_B.pdf",   # The directory you want to save the file in
width = 7, # The width of the plot in inches
height = 9)
ggplot(summary, aes(x=reorder(id, total_med_count_per_kb), y=sample_med_count_per_kb)) +
geom_boxplot(outlier.shape = NA) +
geom_point(shape=16, size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
View(summary)
summary <- compiled %>%
filter(count > 3) %>%
separate(reads, into=c("sample", "lane"), sep = "_") %>%
group_by(bin_id, sample) %>%
mutate(bin_len = sum(contig_len)) %>%
mutate(sample_count = sum(count)) %>%
ungroup() %>%
group_by(bin_id) %>%
mutate(total_count = sum(count)) %>%
ungroup() %>%
mutate(sample_med_count_per_kb = (sample_count/bin_len)*1000) %>%
mutate(total_med_count_per_kb = (total_count/bin_len)*1000) %>%
select(-count, -contig_id, -contig_len, -lane) %>%
distinct() %>%
separate(classification, into = c("domain", "phylum", "class", "order", "family", "genus"), sep = ";") %>%
unite(id, c("bin_id", "phylum", "class", "order", "family"), sep = "_", remove = FALSE) %>%
filter(contamination < 10) %>%
filter(completeness > 50) %>%
filter(total_med_count_per_kb > 103)
pdf(file = "~/RumenCampylobacter2022/Figures/Fig1_AB/output/fig1_B.pdf",   # The directory you want to save the file in
width = 7, # The width of the plot in inches
height = 9)
ggplot(summary, aes(x=reorder(id, total_med_count_per_kb), y=sample_med_count_per_kb)) +
geom_boxplot(outlier.shape = NA) +
geom_point(shape=16, size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
summary <- compiled %>%
filter(count > 3) %>%
separate(reads, into=c("sample", "lane"), sep = "_") %>%
group_by(bin_id, sample) %>%
mutate(bin_len = sum(contig_len)) %>%
mutate(sample_count = sum(count)) %>%
ungroup() %>%
group_by(bin_id) %>%
mutate(total_count = sum(count)) %>%
ungroup() %>%
mutate(sample_med_count_per_kb = (sample_count/bin_len)*1000) %>%
mutate(total_med_count_per_kb = (total_count/bin_len)*1000) %>%
select(-count, -contig_id, -contig_len, -lane) %>%
distinct() %>%
separate(classification, into = c("domain", "phylum", "class", "order", "family", "genus"), sep = ";") %>%
unite(id, c("bin_id", "phylum", "class", "order", "family"), sep = "_", remove = FALSE) %>%
filter(contamination < 10) %>%
filter(completeness > 50)
library(tidyverse)
class <- read.delim("~/RumenCampylobacter2022/Processing/metagenomes/output/gtdbtk.bac120.summary.tsv")[,1:2]
colnames(class)[1] <- "bin_id"
checkm <- read_table("~/RumenCampylobacter2022/Processing/metagenomes/output/checkM.txt", col_names = FALSE, skip = 3, comment = "---")[,c(1,13:15)]
colnames(checkm) <- c("bin_id", "completeness", "contamination", "strain_heterogeneity")
map <- read.csv("~/RumenCampylobacter2022/Processing/metagenomes/output/bin_contig_map.csv", header=FALSE)
colnames(map) <- c("bin_id", "contig_id")
read_count_files <- list.files('~/RumenCampylobacter2022/Processing/metagenomes/output/mapping/', pattern = "bins_readcounts.txt")
df_list <- list()
i <- 1
for (file in read_count_files){
file_loc <- paste("~/RumenCampylobacter2022/Processing/metagenomes/output/mapping/", file, sep = "")
df <- read.delim(file_loc, header=FALSE)[,1:3]
colnames(df) <- c("contig_id", "contig_len", "count")
df$reads <- gsub("_bins_readcounts.txt", "", file)
df_list[[i]] <- df
i <- i + 1
}
read_count <- bind_rows(df_list)
compiled <- inner_join(class, checkm) %>%
inner_join(map) %>%
inner_join(read_count)
summary <- compiled %>%
filter(count > 3) %>%
separate(reads, into=c("sample", "lane"), sep = "_") %>%
group_by(bin_id, sample) %>%
mutate(bin_len = sum(contig_len)) %>%
mutate(sample_count = sum(count)) %>%
ungroup() %>%
group_by(bin_id) %>%
mutate(total_count = sum(count)) %>%
ungroup() %>%
mutate(sample_med_count_per_kb = (sample_count/bin_len)*1000) %>%
mutate(total_med_count_per_kb = (total_count/bin_len)*1000) %>%
select(-count, -contig_id, -contig_len, -lane) %>%
distinct() %>%
separate(classification, into = c("domain", "phylum", "class", "order", "family", "genus"), sep = ";") %>%
unite(id, c("bin_id", "phylum", "class", "order", "family"), sep = "_", remove = FALSE) %>%
filter(contamination < 10) %>%
filter(completeness > 50)
pdf(file = "~/RumenCampylobacter2022/Figures/Fig1_AB/output/fig1_B.pdf",   # The directory you want to save the file in
width = 7, # The width of the plot in inches
height = 9)
ggplot(summary, aes(x=reorder(id, total_med_count_per_kb), y=sample_med_count_per_kb)) +
geom_boxplot(outlier.shape = NA) +
geom_point(shape=16, size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
