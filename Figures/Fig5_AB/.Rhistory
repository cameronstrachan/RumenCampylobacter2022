counts[,2:ncol(counts)] <- lapply(counts[,2:ncol(counts)], as.numeric)
names(counts)[1] <- "asv"
counts_long_norm <- gather(counts, ID, count, -asv) %>%
filter(count != 0) %>%
group_by(ID) %>%
mutate(reads= sum(count)) %>%
ungroup() %>%
mutate(counts_normalized = (count / reads)*100)
seq <- readDNAStringSet("~/RumenCampylobacter2022/Processing/amplicons/output/asv-seqs-merged.fasta")
pred <- predict(rdp(), seq)
conf <- attr(pred, "confidence")
pred$asv <- row.names(pred)
conf <- as.data.frame(conf)
colnames(conf) <- paste(colnames(conf), "conf", sep = "_")
conf$asv <- row.names(conf)
taxa <- inner_join(pred, conf) %>%
select(asv, domain, domain_conf, phylum, phylum_conf, class,
class_conf, order, order_conf, family, family_conf, genus, genus_conf)
taxa_select <- taxa %>%
select(asv, phylum, class, order, family)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_med = median(counts_normalized)) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
filter((max(asv_prev)/asv_prev) > 0.9) %>%
filter(asv_med > 1) %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE)
pdf(file = "~/RumenCampylobacter2022/Figures/Fig1_AB/output/fig1_A.pdf", width = 7, height = 10)
ggplot(counts_long_norm_taxa_select, aes(x=reorder(asv_class, asv_med), y=counts_normalized)) +
#geom_boxplot(outlier.shape = NA) +
geom_jitter(shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1))
dev.off()
library(tidyverse)
library(rRDP)
counts <- read.delim("~/RumenCampylobacter2022/Processing/amplicons/output/asv-counts-merged.txt", header=FALSE)
counts <- counts[-1,]
counts[] <- lapply(counts, as.character)
names(counts) <- counts[1,]
counts <- counts[-1,]
counts[,2:ncol(counts)] <- lapply(counts[,2:ncol(counts)], as.numeric)
names(counts)[1] <- "asv"
counts_long_norm <- gather(counts, ID, count, -asv) %>%
filter(count != 0) %>%
group_by(ID) %>%
mutate(reads= sum(count)) %>%
ungroup() %>%
mutate(counts_normalized = (count / reads)*100)
seq <- readDNAStringSet("~/RumenCampylobacter2022/Processing/amplicons/output/asv-seqs-merged.fasta")
pred <- predict(rdp(), seq)
conf <- attr(pred, "confidence")
pred$asv <- row.names(pred)
conf <- as.data.frame(conf)
colnames(conf) <- paste(colnames(conf), "conf", sep = "_")
conf$asv <- row.names(conf)
taxa <- inner_join(pred, conf) %>%
select(asv, domain, domain_conf, phylum, phylum_conf, class,
class_conf, order, order_conf, family, family_conf, genus, genus_conf)
taxa_select <- taxa %>%
select(asv, phylum, class, order, family)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_med = median(counts_normalized)) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
filter((max(asv_prev)/asv_prev) > 0.9) %>%
filter(asv_med > 1) %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE)
pdf(file = "~/RumenCampylobacter2022/Figures/Fig1_AB/output/fig1_A.pdf", width = 7, height = 10)
ggplot(counts_long_norm_taxa_select, aes(x=reorder(asv_class, asv_med), y=counts_normalized)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=1))
dev.off()
lengths <- read_delim("~/Desktop/TEXT/Manuscripts/campy_description/all_bins.tsv", delim = "\t", escape_double = FALSE, trim_ws = TRUE) %>%
filter(ftype == "CDS") %>%
select(locus_tag, length_bp) %>%
rename(gene_id = locus_tag)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(corrr)
library(ggraph)
library(tidygraph)
library(printr)
class <- read.delim("~/RumenCampylobacter2022/Processing/metagenomes/output/gtdbtk.bac120.summary.tsv")[,1:2]
colnames(class)[1] <- "bin"
class$bin <- gsub("bin\\.", "", class$bin)
checkm <- read_table("~/RumenCampylobacter2022/Processing/metagenomes/output/checkM.txt", col_names = FALSE, skip = 3, comment = "---")[,c(1,13:15)]
colnames(checkm) <- c("bin", "completeness", "contamination", "strain_heterogeneity")
checkm$bin <- gsub("bin\\.", "", checkm$bin)
lengths <- read_delim("~/Desktop/TEXT/Manuscripts/campy_description/all_bins.tsv", delim = "\t", escape_double = FALSE, trim_ws = TRUE) %>%
filter(ftype == "CDS") %>%
select(locus_tag, length_bp) %>%
rename(gene_id = locus_tag)
blast <- read_delim("~/Desktop/TEXT/Manucripts/campy_description/blast/genes_against_rename.txt", delim = "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
colnames(blast) <- c("qseqid", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length", "qseq")
blast <- read_delim("~/Desktop/TEXT/Manuscripts/campy_description/blast/genes_against_rename.txt", delim = "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
blast <- read_delim("~/Desktop/TEXT/Manuscripts/campy_description/blast/genes_against_rename.txt", delim = "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
colnames(blast) <- c("qseqid", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length", "qseq")
bin_map <- blast %>%
select(qseqid, sseqid) %>%
rename(gene_id = qseqid) %>%
separate(sseqid, into=c("rm", "bin", "contig"), sep = "\\.") %>%
select(-rm, -contig) %>%
inner_join(class) %>%
inner_join(checkm) %>%
inner_join(lengths) %>%
group_by(bin) %>%
mutate(total_length = sum(length_bp)) %>%
ungroup()
count_file_dir <- "~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/tan_transcriptome/output/"
files <- list.files(count_file_dir, pattern = ".txt")
df_list <- list()
i <- 1
for (file in files){
df <- read_delim(paste(count_file_dir, file, sep = ""), delim = "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
df$V5 <- gsub(".R1.tan.transcriptome.all_bins.sort.txt", "", file)
df_list[[i]] <- df
i <- i + 1
}
compiled <- bind_rows(df_list)
compiled <- bind_rows(df_list)
colnames(compiled) <- c("gene_id", "gene_name", "annotation", "count", "sample_id")
metadata <- read.csv("~/Desktop/TEXT/Manuscripts/campy_description/Tan2021/metadata.csv") %>%
rename(sample_id = accession)
bin_expression <- compiled %>%
filter(count > 0) %>%
group_by(sample_id) %>%
mutate(total_reads = sum(count)) %>%
ungroup() %>%
filter(gene_id != "__not_aligned") %>%
filter(gene_id != "__no_feature") %>%
filter(gene_id != "__too_low_aQual") %>%
filter(gene_id != "__alignment_not_unique") %>%
filter(gene_id != "__ambiguous") %>%
inner_join(bin_map) %>%
inner_join(metadata) %>%
filter(contamination < 10) %>%
filter(completeness > 50) %>%
group_by(bin, sample_id) %>%
mutate(sum_bin_per_kb = (sum(count) /total_length)*1000) %>%
ungroup() %>%
select(bin, classification, sum_bin_per_kb, treatment, contamination, completeness) %>%
distinct() %>%
mutate(classification = gsub("d__Bacteria;", "", classification)) %>%
separate(classification, into = c("Phylum", "Class", "Order", "Family"), sep = ";") %>%
unite(id, c("bin", "Order", "Family"), sep = "_") %>%
group_by(id) %>%
mutate(med_sum_bin_per_kb = median(sum_bin_per_kb)) %>%
ungroup() %>%
filter(med_sum_bin_per_kb > 0.038187667)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_boxplot(outlier.shape = NA)  +
geom_jitter(shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
?geom_boxplot()
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_boxplot(outlier.shape = NA)  +
geom_jitter(shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_jitter(shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
geom_boxplot(outlier.shape = NA)  +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
View(bin_expression)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(corrr)
library(ggraph)
library(tidygraph)
library(printr)
blast <- read_delim("~/Desktop/TEXT/Manuscripts/campy_description/blast/genes_against_rename.txt", delim = "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
colnames(blast) <- c("qseqid", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length", "qseq")
class <- read.delim("~/RumenCampylobacter2022/Processing/metagenomes/output/gtdbtk.bac120.summary.tsv")[,1:2]
colnames(class)[1] <- "bin"
class$bin <- gsub("bin\\.", "", class$bin)
checkm <- read_table("~/RumenCampylobacter2022/Processing/metagenomes/output/checkM.txt", col_names = FALSE, skip = 3, comment = "---")[,c(1,13:15)]
colnames(checkm) <- c("bin", "completeness", "contamination", "strain_heterogeneity")
checkm$bin <- gsub("bin\\.", "", checkm$bin)
lengths <- read_delim("~/Desktop/TEXT/Manuscripts/campy_description/all_bins.tsv", delim = "\t", escape_double = FALSE, trim_ws = TRUE) %>%
filter(ftype == "CDS") %>%
select(locus_tag, length_bp) %>%
rename(gene_id = locus_tag)
bin_map <- blast %>%
select(qseqid, sseqid) %>%
rename(gene_id = qseqid) %>%
separate(sseqid, into=c("rm", "bin", "contig"), sep = "\\.") %>%
select(-rm, -contig) %>%
inner_join(class) %>%
inner_join(checkm) %>%
inner_join(lengths) %>%
group_by(bin) %>%
mutate(total_length = sum(length_bp)) %>%
ungroup()
count_file_dir <- "~/Desktop/TEXT/Manuscripts/campy_description/metagenome_expression/"
files <- list.files(count_file_dir, pattern = ".txt")
df_list <- list()
i <- 1
for (file in files){
df <- read_delim(paste(count_file_dir, file, sep = ""), delim = "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
df$V5 <- gsub(".R1.transcriptome.all_bins.sort.txt", "", file)
df_list[[i]] <- df
i <- i + 1
}
compiled <- bind_rows(df_list)
colnames(compiled) <- c("gene_id", "gene_name", "annotation", "count", "sample_id")
transcriptome_map <- read_csv("~/vetmed/campy/sample_mapping.csv", col_types = cols(.default = "c")) %>%
rename(sample_id = sample)
bin_expression <- compiled %>%
filter(count > 0) %>%
group_by(sample_id) %>%
mutate(total_reads = sum(count)) %>%
ungroup() %>%
filter(gene_id != "__not_aligned") %>%
filter(gene_id != "__no_feature") %>%
filter(gene_id != "__too_low_aQual") %>%
filter(gene_id != "__alignment_not_unique") %>%
filter(gene_id != "__ambiguous") %>%
inner_join(bin_map) %>%
inner_join(transcriptome_map) %>%
filter(contamination < 10) %>%
filter(completeness > 50) %>%
group_by(bin, sample_id) %>%
mutate(sum_bin_per_kb = (sum(count) /total_length)*1000) %>%
ungroup() %>%
select(bin, classification, sum_bin_per_kb, treatment, contamination, completeness) %>%
distinct() %>%
mutate(classification = gsub("d__Bacteria;", "", classification)) %>%
separate(classification, into = c("Phylum", "Class", "Order", "Family"), sep = ";") %>%
unite(id, c("bin", "Order", "Family"), sep = "_") %>%
group_by(id) %>%
mutate(med_sum_bin_per_kb = median(sum_bin_per_kb)) %>%
ungroup() %>%
# top 10
filter(med_sum_bin_per_kb > 3.9548490)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_boxplot(outlier.shape = NA)  +
geom_jitter(shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16))
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_jitter(shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
#geom_boxplot(outlier.shape = NA)  +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_jitter(shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
geom_boxplot()  +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_jitter(shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
geom_boxplot()  +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(corrr)
library(ggraph)
library(tidygraph)
library(printr)
class <- read.delim("~/RumenCampylobacter2022/Processing/metagenomes/output/gtdbtk.bac120.summary.tsv")[,1:2]
colnames(class)[1] <- "bin"
class$bin <- gsub("bin\\.", "", class$bin)
checkm <- read_table("~/RumenCampylobacter2022/Processing/metagenomes/output/checkM.txt", col_names = FALSE, skip = 3, comment = "---")[,c(1,13:15)]
colnames(checkm) <- c("bin", "completeness", "contamination", "strain_heterogeneity")
checkm$bin <- gsub("bin\\.", "", checkm$bin)
lengths <- read_delim("~/Desktop/TEXT/Manuscripts/campy_description/all_bins.tsv", delim = "\t", escape_double = FALSE, trim_ws = TRUE) %>%
filter(ftype == "CDS") %>%
select(locus_tag, length_bp) %>%
rename(gene_id = locus_tag)
blast <- read_delim("~/Desktop/TEXT/Manuscripts/campy_description/blast/genes_against_rename.txt", delim = "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
colnames(blast) <- c("qseqid", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length", "qseq")
bin_map <- blast %>%
select(qseqid, sseqid) %>%
rename(gene_id = qseqid) %>%
separate(sseqid, into=c("rm", "bin", "contig"), sep = "\\.") %>%
select(-rm, -contig) %>%
inner_join(class) %>%
inner_join(checkm) %>%
inner_join(lengths) %>%
group_by(bin) %>%
mutate(total_length = sum(length_bp)) %>%
ungroup()
count_file_dir <- "~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/tan_transcriptome/output/"
files <- list.files(count_file_dir, pattern = ".txt")
df_list <- list()
i <- 1
for (file in files){
df <- read_delim(paste(count_file_dir, file, sep = ""), delim = "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
df$V5 <- gsub(".R1.tan.transcriptome.all_bins.sort.txt", "", file)
df_list[[i]] <- df
i <- i + 1
}
compiled <- bind_rows(df_list)
colnames(compiled) <- c("gene_id", "gene_name", "annotation", "count", "sample_id")
metadata <- read.csv("~/Desktop/TEXT/Manuscripts/campy_description/Tan2021/metadata.csv") %>%
rename(sample_id = accession)
bin_expression <- compiled %>%
filter(count > 0) %>%
group_by(sample_id) %>%
mutate(total_reads = sum(count)) %>%
ungroup() %>%
filter(gene_id != "__not_aligned") %>%
filter(gene_id != "__no_feature") %>%
filter(gene_id != "__too_low_aQual") %>%
filter(gene_id != "__alignment_not_unique") %>%
filter(gene_id != "__ambiguous") %>%
inner_join(bin_map) %>%
inner_join(metadata) %>%
filter(contamination < 10) %>%
filter(completeness > 50) %>%
group_by(bin, sample_id) %>%
mutate(sum_bin_per_kb = (sum(count) /total_length)*1000) %>%
ungroup() %>%
select(bin, classification, sum_bin_per_kb, treatment, contamination, completeness) %>%
distinct() %>%
mutate(classification = gsub("d__Bacteria;", "", classification)) %>%
separate(classification, into = c("Phylum", "Class", "Order", "Family"), sep = ";") %>%
unite(id, c("bin", "Order", "Family"), sep = "_") %>%
group_by(id) %>%
mutate(med_sum_bin_per_kb = median(sum_bin_per_kb)) %>%
ungroup() %>%
filter(med_sum_bin_per_kb > 0.038187667)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_jitter(shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
geom_boxplot(outlier.shape = NA)  +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_jitter(shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
geom_boxplot()  +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb, colour=treatment)) +
geom_jitter(shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
geom_boxplot(outlier.shape = NA)  +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb)) +
geom_jitter(aes(fill=treatment, shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8)) +
geom_boxplot(outlier.shape = NA)  +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb)) +
geom_jitter(aes(fill=treatment), shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8)) +
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb)) +
geom_jitter(aes(colour=treatment), shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8)) +
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb)) +
geom_jitter(aes(colour=treatment), shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
geom_boxplot(outlier.shape = NA)  +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb)) +
geom_boxplot(outlier.shape = NA)  +
geom_jitter(aes(colour=treatment), shape=16, position=position_jitterdodge(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb)) +
geom_boxplot(outlier.shape = NA)  +
geom_jitter(aes(colour=treatment), shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16)) +
ylim(0, 7.5)
ggplot(bin_expression, aes(x=reorder(id, med_sum_bin_per_kb), y=sum_bin_per_kb)) +
geom_boxplot(outlier.shape = NA)  +
geom_jitter(aes(colour=treatment), shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=16))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
# compile blast output files
blast_files <- list.files("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output", pattern = "_blastout.txt")
blast_df_lis <- list()
i <- 1
for (file in blast_files){
blast_df <- read.delim(paste("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output/", file, sep = ""), header=FALSE)
blast_df$file <- gsub("dna-sequences-", "", file)
blast_df$file <- gsub("_blastout.txt", "", blast_df$file)
blast_df$file <- gsub("asv-seqs-merged", "paper_asvs", blast_df$file)
blast_df_lis[[i]] <- blast_df
i <- i + 1
}
compiled_blast_df <- bind_rows(blast_df_lis)
colnames(compiled_blast_df) <- c("asv_id", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length", "sseq", "file")
compiled_blast_df <- compiled_blast_df %>%
select(-sseq) %>%
mutate(per_aln = (length / qlen)*100)
# compile blast output files
class_files <- list.files("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output", pattern = "-rdp.csv")
class_df_lis <- list()
i <- 1
for (file in class_files){
class_df <- read.csv(paste("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output/", file, sep = ""), header=TRUE)
class_df$file <- gsub("dna-sequences-", "", file)
class_df$file <- gsub("-rdp.csv", "", class_df$file)
class_df$file <- gsub("asv-seqs-merged", "paper_asvs", class_df$file)
class_df <- class_df %>%
select(asv_id, family, file)
class_df_lis[[i]] <- class_df
i <- i + 1
}
compiled_class_df <- bind_rows(class_df_lis)
compiled_class_df_trim <- compiled_class_df %>%
filter(family == "Campylobacteraceae")
count_files <- list.files("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output", pattern = ".txt")
count_files <- count_files[!(count_files %in% blast_files)]
count_df_lis <- list()
i <- 1
for (file in count_files){
count_df <- read_delim(paste("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output/", file, sep = ""), delim = "\t", escape_double = FALSE, trim_ws = TRUE, skip = 1)
colnames(count_df)[1] <- "asv_id"
count_df_long <- count_df%>%
gather(sample, count, -asv_id) %>%
group_by(sample) %>%
mutate(total_reads = sum(count)) %>%
ungroup() %>%
mutate(rel_ab = (count / total_reads)*100)
count_df_long$file <- gsub("feature-table-100-", "", file)
count_df_long$file <- gsub(".txt", "", count_df_long$file)
count_df_long$file <- gsub("asv-counts-merged", "paper_asvs", count_df_long$file)
count_df_lis[[i]] <- count_df_long
i <- i + 1
}
compiled_count_df <- bind_rows(count_df_lis)
selected_asvs <- compiled_blast_df %>%
inner_join(compiled_class_df_trim) %>%
filter(per_aln > 99) %>%
mutate(asv_group = if_else(pident == 100, "match",
if_else(pident <= 99, "other_asv", "NA"))) %>%
select(asv_id, pident, file, asv_group) %>%
distinct() %>%
filter(asv_group != "NA")
metadata <- read.csv("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/metadata.csv")
summary <- inner_join(compiled_count_df, selected_asvs) %>%
inner_join(metadata)
plot <- ggplot(summary, aes(x=file, y=rel_ab, colour=country, shape=animal)) +
geom_jitter(aes(colour=treatment), shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
facet_wrap(. ~ asv_group, scales = "free_y", ncol=1)
plot
plot <- ggplot(summary, aes(x=file, y=rel_ab, colour=country, shape=animal)) +
geom_jitter(shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
facet_wrap(. ~ asv_group, scales = "free_y", ncol=1)
plot
plot <- ggplot(summary, aes(x=file, y=rel_ab, colour=country, shape=animal)) +
geom_jitter(aes(colour=country, shape=animal),shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
facet_wrap(. ~ asv_group, scales = "free_y", ncol=1)
plot <- ggplot(summary, aes(x=file, y=rel_ab, colour=country, shape=animal)) +
geom_jitter(aes(colour=country, shape=animal),shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
facet_wrap(. ~ asv_group, scales = "free_y", ncol=1)
plot
View(selected_asvs)
View(compiled_count_df)
View(summary)
summary <- inner_join(compiled_count_df, selected_asvs) %>%
inner_join(metadata) %>%
filter(rel_ab != 0)
plot <- ggplot(summary, aes(x=file, y=rel_ab, colour=country, shape=animal)) +
geom_jitter(aes(colour=country, shape=animal),shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
facet_wrap(. ~ asv_group, scales = "free_y", ncol=1)
plot
plot <- ggplot(summary, aes(x=file, y=rel_ab, colour=country, shape=animal)) +
geom_point(aes(colour=country, shape=animal),shape=16, position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
facet_wrap(. ~ asv_group, scales = "free_y", ncol=1)
plot
plot <- ggplot(summary, aes(x=file, y=rel_ab, colour=country, shape=animal)) +
geom_point(aes(colour=country, shape=animal), position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
facet_wrap(. ~ asv_group, scales = "free_y", ncol=1)
plot
View(summary)
unique(summary$file)
summary$file <- factor(summary$file, levels = c( "paper_asvs", "hu_2018", "jiao_2015" ,"koester_unpublished" , "koester_unpublished2", "mao_2015", "demulder_2017" ,  "ren_2019",  "ricci_2019",  "sbardellati_2020" , "seddik_2018", "shen_2017" , "shen_2018"))
plot <- ggplot(summary, aes(x=file, y=rel_ab, colour=country, shape=animal)) +
geom_point(aes(colour=country, shape=animal), position=position_jitter(0.2), size = 1, alpha = 0.8) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
facet_wrap(. ~ asv_group, scales = "free_y", ncol=1)
plot
