compiled_trim$annotation <- tolower(compiled_trim$annotation)
compiled_trim_annotation <- compiled_trim[!(grepl(regrex_pattern, compiled_trim$annotation)),]
compiled_trim_annotation %>%
group_by(bin) %>%
mutate(mean_rpkb = mean(rpkb)) %>%
ungroup() %>%
select(bin, classification,  mean_rpkb) %>%
distinct() %>%
#filter(mean_rpkb > 10) %>%
ggplot(aes(x=reorder(bin, mean_rpkb), y=mean_rpkb)) +
geom_bar(stat = "identity") +
scale_y_continuous(trans='log2') +
theme_bw()
compiled_trim_annotation %>%
group_by(bin) %>%
mutate(mean_rpkb = mean(rpkb)) %>%
ungroup() %>%
select(bin, classification,  mean_rpkb) %>%
distinct() %>%
slice_max(mean_rpkb, 10) %>%
ggplot(aes(x=reorder(bin, mean_rpkb), y=mean_rpkb)) +
geom_bar(stat = "identity") +
scale_y_continuous(trans='log2') +
theme_bw()
compiled_trim_annotation %>%
group_by(bin) %>%
mutate(mean_rpkb = mean(rpkb)) %>%
ungroup() %>%
select(bin, classification,  mean_rpkb) %>%
distinct() %>%
slice_max(mean_rpkb, n=10) %>%
ggplot(aes(x=reorder(bin, mean_rpkb), y=mean_rpkb)) +
geom_bar(stat = "identity") +
scale_y_continuous(trans='log2') +
theme_bw()
compiled_trim_annotation_complete <- compiled_trim_annotation %>%
filter(count > 0) %>%
group_by(gene_id) %>%
mutate(n_samples = length(unique(sample_id))) %>%
ungroup() %>%
filter(n_samples == 6) %>%
filter(classification == "d__Bacteria;p__Campylobacterota;c__Campylobacteria;o__Campylobacterales;f__Campylobacteraceae;g__Campylobacter_B;s__")
diff_expression_73 <- compiled_trim %>%
filter(bin != "73") %>%
select(gene_id, count, sample_id) %>%
spread(sample_id, count)
View(diff_expression_73)
diff_expression_73 <- compiled_trim #%>%
View(diff_expression_73)
diff_expression_73 <- compiled_trim %>%
filter(bin != "73") #%>%
View(diff_expression_73)
diff_expression_73 <- compiled_trim %>%
filter(bin == "73") %>%
select(gene_id, count, sample_id) %>%
spread(sample_id, count)
View(diff_expression_73)
diff_expression_73 <- compiled_trim %>%
filter(bin == "73") %>%
select(gene_id, count, sample_id) %>%
spread(sample_id, count)
View(transcriptome_map)
cts <- as.matrix(diff_expression_73[,2:7])
rownames(cts) <- diff_expression_73$gene_id
coldata = matrix(c("baseline", "baseline", "SARA", "SARA", "SARA", "baseline"))
library(DESeq2)
library(DESeq2)
cts <- as.matrix(diff_expression_73[,2:7])
rownames(cts) <- diff_expression_73$gene_id
coldata = matrix(c("baseline", "baseline", "SARA", "SARA", "SARA", "baseline"))
colnames(coldata) <- "treatment"
rownames(coldata) <- c(names(diff_expression_73)[2:7])
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design= ~ treatment)
dds <- DESeq(dds)
dds <- DESeq(dds)
resultsNames(dds)
res <- results(dds)
deseq <- as.data.frame(res, name="treatment_SARA_vs_baseline")
rm(list = c("res", "dds", "cts", "coldata"))
deseq$gene_id <- rownames(deseq)
deseq <- deseq %>%
select(gene_num_rbh, pvalue, padj, log2FoldChange) %>%
filter(!(is.na(padj)))
deseq <- deseq %>%
select(gene_id, pvalue, padj, log2FoldChange) %>%
filter(!(is.na(padj)))
View(deseq)
diff_expression_61 <- compiled_trim %>%
filter(bin == "61") %>%
select(gene_id, count, sample_id) %>%
spread(sample_id, count)
cts <- as.matrix(diff_expression_61[,2:7])
rownames(cts) <- diff_expression_61$gene_id
View(diff_expression_61)
coldata = matrix(c("baseline", "baseline", "SARA", "SARA", "SARA", "baseline"))
rownames(coldata) <- c(names(diff_expression_61)[2:7])
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design= ~ treatment)
diff_expression_61 <- compiled_trim %>%
filter(bin == "61") %>%
select(gene_id, count, sample_id) %>%
spread(sample_id, count)
cts <- as.matrix(diff_expression_61[,2:7])
rownames(cts) <- diff_expression_61$gene_id
coldata = matrix(c("baseline", "baseline", "SARA", "SARA", "SARA", "baseline"))
colnames(coldata) <- "treatment"
rownames(coldata) <- c(names(diff_expression_61)[2:7])
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design= ~ treatment)
dds <- DESeq(dds)
dds <- DESeq(dds)
resultsNames(dds)
res <- results(dds)
deseq <- as.data.frame(res, name="treatment_SARA_vs_baseline")
rm(list = c("res", "dds", "cts", "coldata"))
deseq$gene_id <- rownames(deseq)
deseq61 <- deseq %>%
select(gene_id, pvalue, padj, log2FoldChange) %>%
filter(!(is.na(padj)))
View(deseq61)
deseq61 <- deseq %>%
select(gene_id, pvalue, padj, log2FoldChange) %>%
filter(!(is.na(padj))) %>%
filter(padj < 0.05)
View(deseq61)
View(compiled_trim)
deseq61 <- deseq %>%
select(gene_id, pvalue, padj, log2FoldChange) %>%
filter(!(is.na(padj))) %>%
filter(padj < 0.05) %>%
inner_join(compiled_trim_annotation)
View(deseq61)
deseq61 <- deseq %>%
select(gene_id, pvalue, padj, log2FoldChange) %>%
filter(!(is.na(padj))) %>%
#filter(padj < 0.05) %>%
inner_join(compiled_trim_annotation)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(corrr)
library(ggraph)
library(tidygraph)
library(printr)
library(tidyverse)
library(rRDP)
counts <- read.delim("~/RumenCampylobacter2022/Processing/amplicons/output/asv-counts-merged.txt", header=FALSE)
counts <- counts[-1,]
counts[] <- lapply(counts, as.character)
names(counts) <- counts[1,]
counts <- counts[-1,]
counts[,2:ncol(counts)] <- lapply(counts[,2:ncol(counts)], as.numeric)
names(counts)[1] <- "asv"
counts_long_norm <- gather(counts, ID, count, -asv) %>%
filter(count != 0) %>%
group_by(ID) %>%
mutate(reads= sum(count)) %>%
ungroup() %>%
mutate(counts_normalized = (count / reads)*100)
seq <- readDNAStringSet("~/RumenCampylobacter2022/Processing/amplicons/output/asv-seqs-merged.fasta")
pred <- predict(rdp(), seq)
conf <- attr(pred, "confidence")
pred$asv <- row.names(pred)
conf <- as.data.frame(conf)
colnames(conf) <- paste(colnames(conf), "conf", sep = "_")
conf$asv <- row.names(conf)
taxa <- inner_join(pred, conf) %>%
select(asv, domain, domain_conf, phylum, phylum_conf, class,
class_conf, order, order_conf, family, family_conf, genus, genus_conf)
taxa_select <- taxa %>%
select(asv, phylum, class, order, family)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_med = median(counts_normalized)) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
filter((max(asv_prev)/asv_prev) > 0.9) %>%
filter(asv_med > 1) %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_med = median(counts_normalized)) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE)
View(counts_long_norm_taxa_select)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE) %>%
filter(asv_prev == 48)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE) %>%
filter(asv_prev == 48)
counts_long_norm_taxa_select_mat <- counts_long_norm_taxa_select %>%
select(asv, counts_normalized, ID) %>%
spread(asv, counts_normalized)
View(counts_long_norm_taxa_select)
View(counts_long_norm_taxa_select_mat)
counts_long_norm_taxa_select_spread <- counts_long_norm_taxa_select %>%
select(asv, counts_normalized, ID) %>%
spread(asv, counts_normalized)
counts_long_norm_taxa_select_mat <- as.matrix([,2:ncol(counts_long_norm_taxa_select_spread)])
counts_long_norm_taxa_select_mat <- as.matrix(counts_long_norm_taxa_select_spread[,2:ncol(counts_long_norm_taxa_select_spread)])
View(counts_long_norm_taxa_select_mat)
corr_mat <- cor(counts_long_norm_taxa_select_mat)
View(corr_mat)
View(counts_long_norm)
View(counts_long_norm_taxa_select)
corr_mat_testRes = cor.mtest(counts_long_norm_taxa_select_mat, conf.level = 0.95)
library(corrplot)
corr_mat_testRes = cor.mtest(counts_long_norm_taxa_select_mat, conf.level = 0.95)
View(corr_mat_testRes)
View(corr_mat_testRes$p)
5.763446e-01
1.876751e-03
View(counts_long_norm_taxa_select)
2.744925e-05
View(taxa_select)
View(taxa)
40 / 48
42 / 48
43 / 48
library(tidyverse)
library(rRDP)
counts <- read.delim("~/RumenCampylobacter2022/Processing/amplicons/output/asv-counts-merged.txt", header=FALSE)
counts <- counts[-1,]
counts[] <- lapply(counts, as.character)
names(counts) <- counts[1,]
counts <- counts[-1,]
counts[,2:ncol(counts)] <- lapply(counts[,2:ncol(counts)], as.numeric)
names(counts)[1] <- "asv"
counts_long_norm <- gather(counts, ID, count, -asv) %>%
filter(count != 0) %>%
group_by(ID) %>%
mutate(reads= sum(count)) %>%
ungroup() %>%
mutate(counts_normalized = (count / reads)*100)
seq <- readDNAStringSet("~/RumenCampylobacter2022/Processing/amplicons/output/asv-seqs-merged.fasta")
pred <- predict(rdp(), seq)
conf <- attr(pred, "confidence")
pred$asv <- row.names(pred)
conf <- as.data.frame(conf)
colnames(conf) <- paste(colnames(conf), "conf", sep = "_")
conf$asv <- row.names(conf)
taxa <- inner_join(pred, conf) %>%
select(asv, domain, domain_conf, phylum, phylum_conf, class,
class_conf, order, order_conf, family, family_conf, genus, genus_conf)
taxa_select <- taxa %>%
select(asv, phylum, class, order, family)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE) %>%
filter(asv_prev >= 43)
counts_long_norm_taxa_select_spread <- counts_long_norm_taxa_select %>%
select(asv, counts_normalized, ID) %>%
spread(asv, counts_normalized)
View(counts_long_norm_taxa_select_mat)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE) %>%
filter(asv_prev >= 43)
counts_long_norm_taxa_select_spread <- counts_long_norm_taxa_select %>%
select(asv, counts_normalized, ID) %>%
spread(asv, counts_normalized)
counts_long_norm_taxa_select_mat <- as.matrix(counts_long_norm_taxa_select_spread[,2:ncol(counts_long_norm_taxa_select_spread)])
library(corrplot)
corr_mat <- cor(counts_long_norm_taxa_select_mat)
corr_mat_testRes = cor.mtest(counts_long_norm_taxa_select_mat, conf.level = 0.95)
View(corr_mat)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE) %>%
filter(asv_prev >= 46)
counts_long_norm_taxa_select_spread <- counts_long_norm_taxa_select %>%
select(asv, counts_normalized, ID) %>%
spread(asv, counts_normalized)
counts_long_norm_taxa_select_mat <- as.matrix(counts_long_norm_taxa_select_spread[,2:ncol(counts_long_norm_taxa_select_spread)])
View(counts_long_norm_taxa_select_mat)
46 / 48
45 / 48
counts_long_norm_taxa_select_spread <- counts_long_norm_taxa_select %>%
select(asv, counts_normalized, ID) %>%
spread(asv, counts_normalized)
counts_long_norm_taxa_select_mat <- as.matrix(counts_long_norm_taxa_select_spread[,2:ncol(counts_long_norm_taxa_select_spread)])
library(corrplot)
corr_mat <- cor(counts_long_norm_taxa_select_mat)
corr_mat_testRes = cor.mtest(counts_long_norm_taxa_select_mat, conf.level = 0.95)
View(corr_mat)
counts_long_norm_taxa_select_spread[is.nan(counts_long_norm_taxa_select_spread)] <- 0
counts_long_norm_taxa_select_spread <- counts_long_norm_taxa_select %>%
select(asv, counts_normalized, ID) %>%
spread(asv, counts_normalized)
as.data.frame(counts_long_norm_taxa_select_spread)
counts_long_norm_taxa_select_spread_df <- as.data.frame(counts_long_norm_taxa_select_spread)
View(counts_long_norm_taxa_select_spread_df)
counts_long_norm_taxa_select_spread_df[is.nan(counts_long_norm_taxa_select_spread_df)] <- 0
counts_long_norm_taxa_select_spread_df[is.na(counts_long_norm_taxa_select_spread_df)] <- 0
View(counts_long_norm_taxa_select_spread_df)
counts_long_norm_taxa_select_mat <- as.matrix(counts_long_norm_taxa_select_spread_df[,2:ncol(counts_long_norm_taxa_select_spread_df)])
View(counts_long_norm_taxa_select_mat)
library(corrplot)
corr_mat <- cor(counts_long_norm_taxa_select_mat)
corr_mat_testRes = cor.mtest(counts_long_norm_taxa_select_mat, conf.level = 0.95)
View(corr_mat)
counts <- read.delim("~/RumenCampylobacter2022/Processing/amplicons/output/asv-counts-merged.txt", header=FALSE)
View(counts)
counts <- counts[-1,]
counts[] <- lapply(counts, as.character)
names(counts) <- counts[1,]
counts <- counts[-1,]
counts[,2:ncol(counts)] <- lapply(counts[,2:ncol(counts)], as.numeric)
names(counts)[1] <- "asv"
counts_long_norm <- gather(counts, ID, count, -asv) %>%
filter(count != 0) %>%
group_by(ID) %>%
mutate(reads= sum(count)) %>%
ungroup() %>%
mutate(counts_normalized = (count / reads)*100)
library(tidyverse)
library(rRDP)
counts <- read.delim("~/RumenCampylobacter2022/Processing/amplicons/output/asv-counts-merged.txt", header=FALSE)
counts <- counts[-1,]
counts[] <- lapply(counts, as.character)
names(counts) <- counts[1,]
counts <- counts[-1,]
counts[,2:ncol(counts)] <- lapply(counts[,2:ncol(counts)], as.numeric)
names(counts)[1] <- "asv"
counts_long_norm <- gather(counts, ID, count, -asv) %>%
filter(count != 0) %>%
group_by(ID) %>%
mutate(reads= sum(count)) %>%
ungroup() %>%
mutate(counts_normalized = (count / reads)*100)
seq <- readDNAStringSet("~/RumenCampylobacter2022/Processing/amplicons/output/asv-seqs-merged.fasta")
pred <- predict(rdp(), seq)
conf <- attr(pred, "confidence")
pred$asv <- row.names(pred)
conf <- as.data.frame(conf)
colnames(conf) <- paste(colnames(conf), "conf", sep = "_")
conf$asv <- row.names(conf)
taxa <- inner_join(pred, conf) %>%
select(asv, domain, domain_conf, phylum, phylum_conf, class,
class_conf, order, order_conf, family, family_conf, genus, genus_conf)
taxa_select <- taxa %>%
select(asv, phylum, class, order, family)
counts_long_norm_taxa_select <- inner_join(counts_long_norm, taxa_select) %>%
group_by(asv) %>%
mutate(asv_med = median(counts_normalized)) %>%
mutate(asv_prev = length(unique(ID))) %>%
ungroup() %>%
filter((max(asv_prev)/asv_prev) > 0.9) %>%
filter(asv_med > 1) %>%
mutate(asv_sub = substr(asv, 1,5)) %>%
unite(asv_class, c("asv_sub", "phylum", "class",  "order", "family"), sep = "_", remove=FALSE)
View(counts_long_norm_taxa_select)
meta_data <- read.csv("~/Desktop/TEACHING/2021/project/data/meta_data.csv")
View(meta_data)
meta <- read.csv("~/Desktop/TEACHING/2021/project/data/meta_data.csv")
View(meta)
test <- counts_long_norm_taxa_select
View(test)
check <- inner_join(meta, test)
View(check)
check <- inner_join(meta, test) %>%
select(study, ID, Name) %>%
distinct()
check <- inner_join(meta, test) %>%
select(Study, ID, Name) %>%
distinct()
View(check)
check <- inner_join(meta, test) %>%
select(Study, ID, Name) %>%
distinct() %>%
group_by(Study) %>%
mutate(n_cows = length(unique(Name))) %>%
mutate(n_samples = length(unique(ID))) %>%
ungroup()
sort(unique(check$Name))
library(tidyverse)
qPCR_16s <- read_csv("~/RumenCampylobacter2022/PCRdata/dPCR_feeding_trial.csv")
dPCR_pops <- read_csv("~/RumenCampylobacter2022/PCRdata/qPCR_feeding_trial.csv")
meta <- read.csv("~/RumenCampylobacter2022/METAdata/metadata_feeding_trial.csv")
meta_clean <- meta %>%
gather(SCFA, Concentration, -ID, -Timepoint, -Cow, -Additive) %>%
group_by(ID, SCFA) %>%
mutate(Min = min(Concentration)) %>%
ungroup() %>%
select(-Concentration) %>%
gather(Metric, Concentration, -ID, -Timepoint, -Cow, -Additive, -SCFA) %>%
unite(SCFA, c("SCFA", "Metric"), sep = "_") %>%
select(-Timepoint, -Cow) %>%
distinct() %>%
spread(SCFA, Concentration)
meta_clean$ID <- as.character(meta_clean$ID)
qPCR_16s_clean <- qPCR_16s %>%
distinct()
compiled <- full_join(qPCR_16s, dPCR_pops) %>%
filter(!(is.na(SampleName))) %>%
distinct() %>%
mutate(`16S_total_copies` = as.numeric(gsub("No Ct", 0, `16S_total_copies`))) %>%
separate(ID, into=c("Run", "Day", "Cow"), remove = FALSE) %>%
select(-SampleName)
library(corrplot)
correlation <- inner_join(compiled, meta_clean) %>%
select(-`16S_total_copies`, -Butyrate_uM_Min, -Caproate_uM_Min, -Valerate_uM_Min) %>%
select(-ID, -Run, -Day, -Cow, -Additive)
colnames(correlation) <- gsub("_uM_Min", "", names(correlation))
corr_mat <- cor(correlation)
corr_mat_testRes = cor.mtest(correlation, conf.level = 0.95)
?cor.mtest()
?cor()
?cor
library(tidyverse)
qPCR_16s <- read_csv("~/RumenCampylobacter2022/PCRdata/dPCR_feeding_trial.csv")
dPCR_pops <- read_csv("~/RumenCampylobacter2022/PCRdata/qPCR_feeding_trial.csv")
meta <- read.csv("~/RumenCampylobacter2022/METAdata/metadata_feeding_trial.csv")
meta_clean <- meta %>%
gather(SCFA, Concentration, -ID, -Timepoint, -Cow, -Additive) %>%
group_by(ID, SCFA) %>%
mutate(Min = min(Concentration)) %>%
ungroup() %>%
select(-Concentration) %>%
gather(Metric, Concentration, -ID, -Timepoint, -Cow, -Additive, -SCFA) %>%
unite(SCFA, c("SCFA", "Metric"), sep = "_") %>%
select(-Timepoint, -Cow) %>%
distinct() %>%
spread(SCFA, Concentration)
meta_clean$ID <- as.character(meta_clean$ID)
qPCR_16s_clean <- qPCR_16s %>%
distinct()
compiled <- full_join(qPCR_16s, dPCR_pops) %>%
filter(!(is.na(SampleName))) %>%
distinct() %>%
mutate(`16S_total_copies` = as.numeric(gsub("No Ct", 0, `16S_total_copies`))) %>%
separate(ID, into=c("Run", "Day", "Cow"), remove = FALSE) %>%
select(-SampleName)
correlation <- inner_join(compiled, meta_clean) %>%
select(-`16S_total_copies`, -Butyrate_uM_Min, -Caproate_uM_Min, -Valerate_uM_Min) %>%
select(-ID, -Run, -Day, -Cow, -Additive)
View(correlation)
correlation <- inner_join(compiled, meta_clean) #%>%
View(correlation)
View(meta_clean)
View(correlation)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
# compile blast output files
blast_files <- list.files("~/Desktop/TEXT/Manucripts/campy_populations/review_analysis/global_diversity/output", pattern = "_blastout.txt")
blast_df_lis <- list()
i <- 1
for (file in blast_files){
blast_df <- read.delim(paste("~/Desktop/TEXT/Manucripts/campy_populations/review_analysis/global_diversity/output/", file, sep = ""), header=FALSE)
blast_df$file <- gsub("dna-sequences-", "", file)
blast_df$file <- gsub("_blastout.txt", "", blast_df$file)
blast_df$file <- gsub("asv-seqs-merged", "paper_asvs", blast_df$file)
blast_df_lis[[i]] <- blast_df
i <- i + 1
}
compiled_blast_df <- bind_rows(blast_df_lis)
colnames(compiled_blast_df) <- c("asv_id", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length", "sseq", "file")
compiled_blast_df <- compiled_blast_df %>%
select(-sseq) %>%
mutate(per_aln = (length / qlen)*100)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
# compile blast output files
blast_files <- list.files("~/Desktop/TEXT/Manucripts/campy_populations/review_analysis/global_diversity/output", pattern = "_blastout.txt")
blast_df_lis <- list()
i <- 1
for (file in blast_files){
blast_df <- read.delim(paste("~/Desktop/TEXT/Manucripts/campy_populations/review_analysis/global_diversity/output/", file, sep = ""), header=FALSE)
blast_df$file <- gsub("dna-sequences-", "", file)
blast_df$file <- gsub("_blastout.txt", "", blast_df$file)
blast_df$file <- gsub("asv-seqs-merged", "paper_asvs", blast_df$file)
blast_df_lis[[i]] <- blast_df
i <- i + 1
}
compiled_blast_df <- bind_rows(blast_df_lis)
colnames(compiled_blast_df) <- c("asv_id", "sseqid", "pident", "sstart", "send", "qstart", "qend", "evalue", "bitscore", "score", "qlen", "length", "sseq", "file")
compiled_blast_df <- compiled_blast_df %>%
select(-sseq) %>%
mutate(per_aln = (length / qlen)*100)
# compile blast output files
blast_files <- list.files("~/Desktop/TEXT/Manucripts/campy_populations/review_analysis/global_diversity/output", pattern = "_blastout.txt")
dna.sequences.hu_2018_blastout <- read.delim("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output/dna-sequences-hu_2018_blastout.txt", header=FALSE)
View(dna.sequences.hu_2018_blastout)
# compile blast output files
blast_files <- list.files("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output", pattern = "_blastout.txt")
# compile blast output files
blast_files <- list.files("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output/", pattern = "_blastout.txt")
# compile blast output files
blast_files <- list.files("~/Desktop/TEXT/Manuscripts/campy_populations/review_analysis/global_diversity/output", pattern = "_blastout.txt")
